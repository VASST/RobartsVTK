# - Find FFTW
# Find the native FFTW includes and library
#
#  FFTW_INCLUDE_DIRS    - Where to find fftw3.h
#  FFTW_LIBRARIES       - List of libraries when using FFTW.
#  FFTW_FOUND           - True if FFTW found.

FIND_PATH(FFTW_INCLUDE_DIRS fftw3.h PATHS ${fftw_ROOT_DIR})

FIND_LIBRARY(fftw3-3_LIB NAMES libfftw3-3 PATHS ${fftw_ROOT_DIR})
FIND_LIBRARY(fftw3f-3_LIB NAMES libfftw3f-3 PATHS ${fftw_ROOT_DIR})
FIND_LIBRARY(fftw3l-3_LIB NAMES libfftw3l-3 PATHS ${fftw_ROOT_DIR})

SET(FFTW_LIBRARIES ${fftw3-3_LIB} ${fftw3f-3_LIB} ${fftw3l-3_LIB})

# handle the QUIETLY and REQUIRED arguments and set FFTW_FOUND to TRUE if
# all listed variables are TRUE
include (FindPackageHandleStandardArgs)
find_package_handle_standard_args (FFTW DEFAULT_MSG FFTW_LIBRARIES FFTW_INCLUDE_DIRS)

IF(fftw3-3_LIB)
  ADD_LIBRARY(FFTW SHARED IMPORTED)
  GET_FILENAME_COMPONENT(FFTW_LIB_FOLDER ${fftw3-3_LIB} DIRECTORY)
  SET_PROPERTY(TARGET FFTW PROPERTY IMPORTED_IMPLIB ${FFTW_LIB_FOLDER}/fftw3-3${CMAKE_STATIC_LIBRARY_SUFFIX})
  SET_PROPERTY(TARGET FFTW PROPERTY IMPORTED_LOCATION ${FFTW_LIB_FOLDER}/fftw3-3${CMAKE_SHARED_LIBRARY_SUFFIX})
ENDIF()
IF(fftw3f-3_LIB)
  ADD_LIBRARY(FFTWF SHARED IMPORTED)
  GET_FILENAME_COMPONENT(FFTWF_LIB_FOLDER ${fftw3f-3_LIB} DIRECTORY)
  SET_PROPERTY(TARGET FFTWF PROPERTY IMPORTED_IMPLIB ${FFTWF_LIB_FOLDER}/fftw3f-3${CMAKE_STATIC_LIBRARY_SUFFIX})
  SET_PROPERTY(TARGET FFTWF PROPERTY IMPORTED_LOCATION ${FFTWF_LIB_FOLDER}/fftw3f-3${CMAKE_SHARED_LIBRARY_SUFFIX})
ENDIF()
IF(fftw3l-3_LIB)
  ADD_LIBRARY(FFTWL SHARED IMPORTED)
  GET_FILENAME_COMPONENT(FFTWL_LIB_FOLDER ${fftw3l-3_LIB} DIRECTORY)
  SET_PROPERTY(TARGET FFTWL PROPERTY IMPORTED_IMPLIB ${FFTWL_LIB_FOLDER}/fftw3l-3${CMAKE_STATIC_LIBRARY_SUFFIX})
  SET_PROPERTY(TARGET FFTWL PROPERTY IMPORTED_LOCATION ${FFTWL_LIB_FOLDER}/fftw3l-3${CMAKE_SHARED_LIBRARY_SUFFIX})
ENDIF()

mark_as_advanced (FFTW_LIBRARIES FFTW_INCLUDE_DIRS fftw3-3_LIB fftw3f-3_LIB fftw3l_LIB)