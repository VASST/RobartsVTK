# Find the IC Capturing libraries
# This module defines
# ICCAPTURING_INCLUDE_DIR - ICCapturing header files
# ICCAPTURING_TIS_UDSHL09_STATIC_LIB - ICCapturing TIS_UDSHL09 static library
# ICCAPTURING_TIS_UDSHL09_SHARED_LIB - ICCapturing TIS_UDSHL09 shared library
# ICCAPTURING_TIS_UDSHL09D_STATIC_LIB - ICCapturing TIS_UDSHL09 static library with debug info
# ICCAPTURING_TIS_UDSHL09D_SHARED_LIB - ICCapturing TIS_UDSHL09 shared library with debug info
# ICCAPTURING_TIS_DSHOWLIB09_SHARED_LIB - ICCapturing TIS_DShowLib09 shared library
# ICCAPTURING_TIS_DSHOWLIB09D_SHARED_LIB - ICCapturing TIS_DShowLib09 shared library with debug info
#

SET( ICCAPTURING_PATH_HINTS
    "../ImagingControl-3.2"
    "../PLTools/ImagingControl/ImagingControl-3.2"
    "../../PLTools/ImagingControl/ImagingControl-3.2"
    "../trunk/PLTools/ImagingControl/ImagingControl-3.2"
    "${CMAKE_CURRENT_BINARY_DIR}/PLTools/ImagingControl/ImagingControl-3.2"
    )

  SET( COMPILER_SUFFIX "_vc9")
    IF ( ${CMAKE_GENERATOR} MATCHES "Visual Studio 9" )
        SET( COMPILER_SUFFIX "_vc9")
    ENDIF ( ${CMAKE_GENERATOR} MATCHES "Visual Studio 9" )

  IF ( ${CMAKE_GENERATOR} MATCHES "Visual Studio 10" )
        SET( COMPILER_SUFFIX "_vc10")
    ENDIF ( ${CMAKE_GENERATOR} MATCHES "Visual Studio 10" )

  SET( PLATFORM_SUFFIX)
  IF ( CMAKE_HOST_WIN32 AND CMAKE_CL_64 )
        SET( PLATFORM_SUFFIX "_x64")
    ENDIF ( CMAKE_HOST_WIN32 AND CMAKE_CL_64 )

FIND_PATH(ICCAPTURING_INCLUDE_DIR Grabber.h
  PATH_SUFFIXES include
  PATHS ${ICCAPTURING_PATH_HINTS}
  )

FIND_LIBRARY(ICCAPTURING_TIS_UDSHL09_STATIC_LIB
  NAMES TIS_UDSHL09${COMPILER_SUFFIX}${PLATFORM_SUFFIX}
  PATH_SUFFIXES "/win32/release" "/x64/release"
  PATHS ${ICCAPTURING_PATH_HINTS}
  )
FIND_FILE(ICCAPTURING_TIS_UDSHL09_SHARED_LIB
  NAMES TIS_UDSHL09${COMPILER_SUFFIX}${PLATFORM_SUFFIX}${CMAKE_SHARED_LIBRARY_SUFFIX}
  PATH_SUFFIXES "/win32/release" "/x64/release"
  PATHS ${ICCAPTURING_PATH_HINTS}
  )
FIND_LIBRARY(ICCAPTURING_TIS_UDSHL09D_STATIC_LIB
  NAMES TIS_UDSHL09${COMPILER_SUFFIX}d${PLATFORM_SUFFIX}
  PATH_SUFFIXES "/win32/debug" "/x64/debug"
  PATHS ${ICCAPTURING_PATH_HINTS}
  )
FIND_FILE(ICCAPTURING_TIS_UDSHL09D_SHARED_LIB
  NAMES TIS_UDSHL09${COMPILER_SUFFIX}d${PLATFORM_SUFFIX}${CMAKE_SHARED_LIBRARY_SUFFIX}
  PATH_SUFFIXES "/win32/debug" "/x64/debug"
  PATHS ${ICCAPTURING_PATH_HINTS}
  )

FIND_FILE(ICCAPTURING_TIS_DSHOWLIB09_SHARED_LIB
  NAMES TIS_DShowLib09${PLATFORM_SUFFIX}${CMAKE_SHARED_LIBRARY_SUFFIX}
  PATH_SUFFIXES "/win32/release" "/x64/release"
  PATHS ${ICCAPTURING_PATH_HINTS}
  )
FIND_FILE(ICCAPTURING_TIS_DSHOWLIB09D_SHARED_LIB
  NAMES TIS_DShowLib09d${PLATFORM_SUFFIX}${CMAKE_SHARED_LIBRARY_SUFFIX}
  PATH_SUFFIXES "/win32/debug" "/x64/debug"
  PATHS ${ICCAPTURING_PATH_HINTS}
  )

# handle the QUIETLY and REQUIRED arguments and set ICCAPTURING_FOUND to TRUE if
# all listed variables are TRUE
INCLUDE(FindPackageHandleStandardArgs)
FIND_PACKAGE_HANDLE_STANDARD_ARGS(ICCAPTURING  DEFAULT_MSG
  ICCAPTURING_INCLUDE_DIR
  ICCAPTURING_TIS_UDSHL09_STATIC_LIB
  ICCAPTURING_TIS_UDSHL09_SHARED_LIB
  ICCAPTURING_TIS_UDSHL09D_STATIC_LIB
  ICCAPTURING_TIS_UDSHL09D_SHARED_LIB
  ICCAPTURING_TIS_DSHOWLIB09_SHARED_LIB
  ICCAPTURING_TIS_DSHOWLIB09D_SHARED_LIB
  )