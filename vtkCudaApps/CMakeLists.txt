# Include the common setting file
PROJECT (ROBARTSCUDAPPS)

FIND_PACKAGE(VTK REQUIRED)
IF(NOT VTK_USE_CUDA)
  MESSAGE(FATAL_ERROR "Example ${PROJECT_NAME} requires VTK_USE_CUDA.")
ENDIF(NOT VTK_USE_CUDA)
INCLUDE(${VTK_USE_FILE})

#INCLUDE(${VTK_CUDA_SRC})

# FIND ALL CUDA DIRECTIVES
#INCLUDE(FindCuda.cmake)
FIND_PACKAGE(CUDA)
INCLUDE(FindCUDA)

SET(CUDA_LIB_PATH "${CUDA_TOOLKIT_ROOT_DIR}/lib" )
SET(CUDA_INC_PATH "${CUDA_TOOLKIT_ROOT_DIR}/include" )
SET(CUDA_BIN_PATH "${CUDA_TOOLKIT_ROOT_DIR}/bin" )

INCLUDE_DIRECTORIES(${ROBARTSCUDA_SOURCE_DIR}
                    ${ROBARTSCUDA_BINARY_DIR}
		    ${CUDA_INC_PATH} )

LINK_DIRECTORIES(${CUDA_BIN_PATH} ${CUDA_LIB_PATH} ${ROBARTSCUDA_BINARY_DIR})

SET(ROBARTSCUDAPPS_SRCS
  CudaApps
  CudaApps
  )

SET(ROBARTSCUDAPPS_ADDITIONAL_HEADERS
  cudaRendererInformation.h
  cudaVolumeInformation.h
  cudaTypeRange.h
)

#LINK_LIBRARIES("-L'/${CUDA_SDK_ROOT_DIR}/C/Common/lib' -lcutil")

#FIND_FILE(CUDE_RULES "cuda.rules" PATHS "C:/Documents and Settings/All Users.WINDOWS/Application Data/NVIDIA Corporation/NVIDIA GPU Computing SDK/C/common" )

SET(ROBARTSCUDAPPS_CUDA_SRCS
	#CUDA_renderAlgo.cu
  #  CUDA_segmentAlgo.cu
)

IF(APPLE)
  SET(EXECUTABLE_FLAG MACOSX_BUNDLE)
ENDIF(APPLE)



FOREACH(name ${ROBARTSCUDAPPS_SRCS})
  CUDA_ADD_EXECUTABLE(${name} CUDA_renderAlgo.cu CUDA_segmentAlgo.cu ${EXECUTABLE_FLAG} ${name}.cxx)

  LINK_DIRECTORIES(${CUDA_BIN_PATH} ${CUDA_LIB_PATH} ${ROBARTSCUDA_BINARY_DIR})
  TARGET_LINK_LIBRARIES(${name} vtkRendering vtkFiltering vtkVolumeRendering vtkRobartsCuda vtkWidgets cuda cudart cudartemu cufft cufftemu OpenCL cublas cublasemu)

ENDFOREACH(name)



#INCLUDE(${RobartsVTK_SOURCE_DIR}/CMake/KitCommonBlock.cmake)
#INCLUDE(${CUDE_RULES})
